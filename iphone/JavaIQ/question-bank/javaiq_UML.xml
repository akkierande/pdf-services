<questionbank group="UML">
	<category name="UML models">
		<qa id="1" rating="2">			<question><![CDATA[q:What is UML?]]></question>
			<answer><![CDATA[UML is Unified Modeling Language. It is a graphical language for visualizing specifying constructing and documenting the artifacts of the system. It allows you to create a blue print of all the aspects of the system, before actually physically implementing the system.]]></answer>
		</qa>
		<qa id="2" rating="2">			<question><![CDATA[q:What is modeling?]]></question>
			<answer><![CDATA[Modeling is a proven and well-accepted engineering technique which helps build a model.]]></answer>
		</qa>
		<qa id="3" rating="2">			<question><![CDATA[q:What are the advantages of creating a model?]]></question>
			<answer><![CDATA[Model is a simplification of reality; it is a blueprint of the actual system that needs to be built. Model helps to visualize the system. Model helps to specify the structural and behavior of the system. Model helps make templates for constructing the system. Model helps document the system.]]></answer>
		</qa>
		<qa id="4" rating="2">			<question><![CDATA[q:What are the different views that are considered when building an object-oriented software system?]]></question>
			<answer><![CDATA[Normally there are 5 views. Use Case view - This view exposes the requirements of a system. Design View - Capturing the vocabulary. Process View - modeling the distribution of the systems processes and threads. Implementation view - addressing the physical implementation of the system. Deployment view - focus on the modeling the components required for deploying the system.]]></answer>
		</qa>
		<qa id="5" rating="2">			<question><![CDATA[q:What are diagrams?]]></question>
			<answer><![CDATA[Diagrams are graphical representation of a set of elements most often shown made of things and associations.]]></answer>
		</qa>
		<qa id="6" rating="2">			<question><![CDATA[q:What are the major three types of modeling used?]]></question>
			<answer><![CDATA[Major three types of modeling are structural, behavioral, and architectural.]]></answer>
		</qa>
		<qa id="7" rating="2">			<question><![CDATA[q:Mention the different kinds of modeling diagrams used?]]></question>
			<answer><![CDATA[Modeling diagrams that are commonly used are, there are 9 of them. Use case diagram, Class Diagram, Object Diagram, Sequence Diagram, statechart Diagram, Collaboration Diagram, Activity Diagram, Component diagram, Deployment Diagram.]]></answer>
		</qa>
		<qa id="8" rating="2">			<question><![CDATA[q:What is Architecture?]]></question>
			<answer><![CDATA[Architecture is not only taking care of the structural and behavioral aspect of a software system but also taking into account the software usage, functionality, performance, reuse, economic and technology constraints.]]></answer>
		</qa>
		<qa id="9" rating="2">			<question><![CDATA[q:What is SDLC?]]></question>
			<answer><![CDATA[SDLC is Software Development Life Cycle. SDLC of a system included processes that are Use case driven, Architecture centric and Iterative and Incremental. This Life cycle is divided into phases. Phase is a time span between two milestones. The milestones are Inception, Elaboration, Construction, and Transition. Process Workflows that evolve through these phase are Business Modeling, Requirement gathering, Analysis and Design, Implementation, Testing, Deployment. Supporting Workflows are Configuration and change management, Project management.]]></answer>
		</qa>
		<qa id="10" rating="2">			<question><![CDATA[q:What are Relationships?]]></question>
			<answer><![CDATA[There are different kinds of relationships: Dependencies, Generalization, and Association. Dependencies are relations ships between two entities that that a change in specification of one thing may affect another thing. Most commonly it is used to show that one class uses another class as an argument in the signature of the operation. Generalization is relationships specified in the class subclass scenario, it is shown when one entity inherits from other. Associations are structural relationships that are: a room has walls, Person works for a company. Aggregation is a type of association where there is a has a relation ship, That is a room has walls, ño if there are two classes room and walls then the relation ship is called a association and further defined as an aggregation.]]></answer>
		</qa>
		<qa id="11" rating="2">			<question><![CDATA[q:How are the diagrams divided?]]></question>
			<answer><![CDATA[The nine diagrams are divided into static diagrams and dynamic diagrams.
Static Diagrams (Also called Structural Diagram): Class diagram, Object diagram, Component Diagram, Deployment diagram.
Dynamic Diagrams (Also called Behavioral Diagrams): Use Case Diagram, Sequence Diagram, Collaboration Diagram, Activity diagram, Statechart diagram.]]></answer>
		</qa>
		<qa id="12" rating="2">			<question><![CDATA[q:What are Messages?]]></question>
			<answer><![CDATA[A message is the specification of a communication, when a message is passed that results in action that is in turn an executable statement.]]></answer>
		</qa>
		<qa id="13" rating="2">			<question><![CDATA[q:What is an Use Case?]]></question>
			<answer><![CDATA[A use case specifies the behavior of a system or a part of a system, óse cases are used to capture the behavior that need to be developed. It involves the interaction of actors and the system.]]></answer>
		</qa>
	</category>
</questionbank>
